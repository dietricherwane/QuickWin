/usr/local/rvm/rubies/ruby-2.0.0-p195/bin/ruby -r ./siteconf20200107-23886-cxrb5l.rb extconf.rb
checking for ffi_call() in -lffi... yes
checking for ffi_prep_closure()... yes
checking for ffi_raw_call()... yes
checking for ffi_prep_raw_closure()... yes
checking for rb_thread_blocking_region()... yes
checking for rb_thread_call_with_gvl()... yes
checking for rb_thread_call_without_gvl()... yes
checking for ffi_prep_cif_var()... yes
creating extconf.h
creating Makefile

make "DESTDIR=" clean

make "DESTDIR="
compiling Struct.c
compiling Variadic.c
compiling FunctionInfo.c
compiling Pointer.c
compiling LongDouble.c
compiling Type.c
compiling MethodHandle.c
compiling ArrayType.c
compiling StructLayout.c
compiling ClosurePool.c
compiling Thread.c
compiling ffi.c
compiling StructByReference.c
compiling StructByValue.c
compiling Buffer.c
compiling Platform.c
compiling Call.c
compiling DynamicLibrary.c
compiling Function.c
Function.c: In function ‘callback_invoke’:
Function.c:479:9: warning: passing argument 1 of ‘rb_thread_call_with_gvl’ from incompatible pointer type [enabled by default]
         rb_thread_call_with_gvl(callback_with_gvl, &cb);
         ^
Function.c:102:14: note: expected ‘void * (*)(void *)’ but argument is of type ‘VALUE (*)(void *)’
 extern void *rb_thread_call_with_gvl(void *(*func)(void *), void *data1);
              ^
compiling MemoryPointer.c
compiling LastError.c
compiling AbstractMemory.c
compiling DataConverter.c
compiling MappedType.c
compiling Types.c
linking shared-object ffi_c.so

make "DESTDIR=" install
/usr/bin/install -c -m 0755 ffi_c.so ./.gem.20200107-23886-n55v99
installing default ffi_c libraries
